{"ast":null,"code":"let db = {};\n\nclass MockAPI {\n  constructor() {}\n\n  async registerUser(user) {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        let users = localStorage.getItem(\"users\");\n\n        if (typeof users !== \"string\") {\n          users = \"{}\";\n        }\n\n        users = JSON.parse(users);\n\n        if (user.cpf in users) {\n          reject(\"CPF já em uso!\");\n        } else {\n          users[user.cpf] = user;\n          localStorage.setItem(\"users\", JSON.stringify(users));\n          resolve(\"\");\n        }\n      }, 300);\n    });\n  }\n\n  async authUser(cpf, passwd) {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        let users = localStorage.getItem(\"users\");\n\n        if (typeof users !== \"string\") {\n          users = \"{}\";\n        }\n\n        users = JSON.parse(users);\n\n        if (cpf in users && passwd === users[cpf].password) {\n          resolve(\"\");\n        } else {\n          reject(\"\");\n        }\n      }, 300);\n    });\n  }\n\n  async getUserInfo(cpf) {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        let users = localStorage.getItem(\"users\");\n\n        if (typeof users !== \"string\") {\n          users = \"{}\";\n        }\n\n        users = JSON.parse(users);\n\n        if (cpf in users) {\n          resolve(JSON.stringify(users[cpf]));\n        } else {\n          reject(\"Usuário não encontrado!\");\n        }\n      }, 300);\n    });\n  }\n\n  async getUsers() {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        let users = localStorage.getItem(\"users\");\n\n        if (typeof users !== \"string\") {\n          users = \"{}\";\n        }\n\n        resolve(users);\n      }, 300);\n    });\n  }\n\n  async updateUserInfo(cpf, info) {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        let users = localStorage.getItem(\"users\");\n\n        if (typeof users !== \"string\") {\n          users = \"{}\";\n        }\n\n        users = JSON.parse(users);\n\n        if (cpf in users) {\n          users[cpf] = { ...users[cpf],\n            ...info\n          };\n          localStorage.setItem(\"users\", JSON.stringify(users));\n          resolve(\"\");\n        } else {\n          reject(\"Usuário não encontrado!\");\n        }\n      }, 300);\n    });\n  }\n\n  async getProduct(name) {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        let products = localStorage.getItem(\"products\");\n\n        if (typeof products !== \"string\") {\n          products = \"{}\";\n        }\n\n        products = JSON.parse(products); // if (name in products) {\n        // \tresolve(JSON.stringify(products[name]));\n        // } else {\n        // \treject(\"Produto não encontrado!\");\n        // }\n\n        if (name in db) {\n          resolve(JSON.stringify(db[name]));\n        } else {\n          reject(\"Produto não encontrado!\");\n        }\n      }, 300);\n    });\n  }\n\n  async updateProduct(name, info) {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        let products = localStorage.getItem(\"products\");\n\n        if (typeof products !== \"string\") {\n          products = \"{}\";\n        }\n\n        products = JSON.parse(products);\n        products = JSON.parse(db);\n\n        if (name in products) {\n          products[name] = { ...products[name],\n            ...info\n          }; // localStorage.setItem(\"products\", JSON.stringify(products));\n\n          resolve(\"\");\n        } else {\n          reject(\"Produto não encontrado!\");\n        }\n      }, 300);\n    });\n  }\n\n  async getProducts(categoryFilter) {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        let products = localStorage.getItem(\"products\");\n\n        if (typeof products !== \"string\") {\n          products = \"{}\";\n        }\n\n        products = JSON.parse(products);\n        console.log(db);\n        products = JSON.parse(db);\n\n        if (categoryFilter) {\n          for (let key of Object.keys(products)) {\n            if (products[key].category !== categoryFilter) {\n              delete products[key];\n            }\n          }\n        }\n\n        resolve(JSON.stringify(products));\n      }, 300);\n    });\n  }\n\n  async removeProduct(name) {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        let products = localStorage.getItem(\"products\");\n\n        if (typeof products !== \"string\") {\n          products = \"{}\";\n        }\n\n        products = JSON.parse(products); // if (name in products) {\n        // \tdelete products[name];\n        // \tlocalStorage.setItem(\"products\", JSON.stringify(products));\n        // \tresolve(\"\");\n        // } else {\n        // \treject(\"O produto não existe!\");\n        // }\n\n        if (name in db) {\n          delete db[name];\n          resolve(\"\");\n        } else {\n          reject(\"O produto não existe!\");\n        }\n      }, 300);\n    });\n  }\n\n  async addProduct(product) {\n    console.log(product);\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        let products = localStorage.getItem(\"products\");\n\n        if (typeof products !== \"string\") {\n          products = \"{}\";\n        }\n\n        console.log(\"here\", products);\n        products = JSON.parse(products);\n        console.log(\"now here\", products); // if (product.name in products) {\n        // \treject(\"O produto já existe!\");\n        // } else {\n        // \tproducts[product.name] = product;\n        // \tlocalStorage.setItem(\"products\", JSON.stringify(products));\n        // \tresolve(\"\");\n        // }\n\n        if (product.name in db) {\n          reject(\"O produto já existe!\");\n        } else {\n          db[product.name] = product;\n          resolve(\"\");\n        }\n      }, 300);\n    });\n  }\n\n  async processPayment(cart) {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        let products = localStorage.getItem(\"products\");\n\n        if (typeof products !== \"string\") {\n          products = \"{}\";\n        }\n\n        products = JSON.parse(products);\n\n        for (let item of Object.values(cart)) {\n          if (item.qtt > products[item.glassesPreviewProps.name].availableQtt) {\n            reject(`Quantidade solicitada para o item ${item.glassesPreviewProps.name} é maior do que a disponível`);\n          } else {\n            products[item.glassesPreviewProps.name].availableQtt -= item.qtt;\n            products[item.glassesPreviewProps.name].soldQtt += item.qtt;\n          }\n        }\n\n        localStorage.setItem(\"products\", JSON.stringify(products));\n        resolve(\"\");\n      }, 300);\n    });\n  }\n\n}\n\nconst mockAPI = new MockAPI();\nmodule.exports = db;\nexport default mockAPI;","map":{"version":3,"names":["db","MockAPI","constructor","registerUser","user","Promise","resolve","reject","setTimeout","users","localStorage","getItem","JSON","parse","cpf","setItem","stringify","authUser","passwd","password","getUserInfo","getUsers","updateUserInfo","info","getProduct","name","products","updateProduct","getProducts","categoryFilter","console","log","key","Object","keys","category","removeProduct","addProduct","product","processPayment","cart","item","values","qtt","glassesPreviewProps","availableQtt","soldQtt","mockAPI","module","exports"],"sources":["/home/cypherlock/gitrepos/Good-Glasses/src/API_middlewares/mock.js"],"sourcesContent":["let db = {}\n\nclass MockAPI {\n\tconstructor() {};\n\n\tasync registerUser(user) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tsetTimeout(() => {\n\t\t\t\tlet users = localStorage.getItem(\"users\");\n\t\t\t\tif (typeof users !== \"string\") {\n\t\t\t\t\tusers = \"{}\";\n\t\t\t\t}\n\t\t\t\tusers = JSON.parse(users);\n\t\t\t\tif (user.cpf in users) {\n\t\t\t\t\treject(\"CPF já em uso!\");\n\t\t\t\t} else {\n\t\t\t\t\tusers[user.cpf] = user;\n\t\t\t\t\tlocalStorage.setItem(\"users\", JSON.stringify(users));\n\t\t\t\t\tresolve(\"\");\n\t\t\t\t}\n\t\t\t}, 300);\n\t\t});\n\t};\n\n\tasync authUser(cpf, passwd) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tsetTimeout(() => {\n\t\t\t\tlet users = localStorage.getItem(\"users\");\n\t\t\t\tif (typeof users !== \"string\") {\n\t\t\t\t\tusers = \"{}\";\n\t\t\t\t}\n\t\t\t\tusers = JSON.parse(users);\n\t\t\t\tif (cpf in users && passwd === users[cpf].password) {\n\t\t\t\t\tresolve(\"\");\n\t\t\t\t} else {\n\t\t\t\t\treject(\"\");\n\t\t\t\t}\n\t\t\t}, 300);\n\t\t});\n\t};\n\n\tasync getUserInfo(cpf) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tsetTimeout(() => {\n\t\t\t\tlet users = localStorage.getItem(\"users\");\n\t\t\t\tif (typeof users !== \"string\") {\n\t\t\t\t\tusers = \"{}\";\n\t\t\t\t}\n\t\t\t\tusers = JSON.parse(users);\n\t\t\t\tif (cpf in users) {\n\t\t\t\t\tresolve(JSON.stringify(users[cpf]));\n\t\t\t\t} else {\n\t\t\t\t\treject(\"Usuário não encontrado!\");\n\t\t\t\t}\n\t\t\t}, 300);\n\t\t});\n\t};\n\n\tasync getUsers() {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tsetTimeout(() => {\n\t\t\t\tlet users = localStorage.getItem(\"users\");\n\t\t\t\tif (typeof users !== \"string\") {\n\t\t\t\t\tusers = \"{}\";\n\t\t\t\t}\n\t\t\t\tresolve(users);\n\t\t\t}, 300);\n\t\t});\n\t}\n\n\tasync updateUserInfo(cpf, info) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tsetTimeout(() => {\n\t\t\t\tlet users = localStorage.getItem(\"users\");\n\t\t\t\tif (typeof users !== \"string\") {\n\t\t\t\t\tusers = \"{}\";\n\t\t\t\t}\n\t\t\t\tusers = JSON.parse(users);\n\t\t\t\tif (cpf in users) {\n\t\t\t\t\tusers[cpf] = {...users[cpf], ...info};\n\t\t\t\t\tlocalStorage.setItem(\"users\", JSON.stringify(users));\n\t\t\t\t\tresolve(\"\");\n\t\t\t\t} else {\n\t\t\t\t\treject(\"Usuário não encontrado!\");\n\t\t\t\t}\n\t\t\t}, 300);\n\t\t});\n\t};\n\n\tasync getProduct(name) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tsetTimeout(() => {\n\t\t\t\tlet products = localStorage.getItem(\"products\");\n\t\t\t\tif (typeof products !== \"string\") {\n\t\t\t\t\tproducts = \"{}\";\n\t\t\t\t}\n\t\t\t\tproducts = JSON.parse(products);\n\t\t\t\t// if (name in products) {\n\t\t\t\t// \tresolve(JSON.stringify(products[name]));\n\t\t\t\t// } else {\n\t\t\t\t// \treject(\"Produto não encontrado!\");\n\t\t\t\t// }\n\t\t\t\tif (name in db) {\n\t\t\t\t\tresolve(JSON.stringify(db[name]));\n\t\t\t\t} else {\n\t\t\t\t\treject(\"Produto não encontrado!\");\n\t\t\t\t}\n\t\t\t}, 300);\n\t\t});\n\t};\n\n\tasync updateProduct(name, info) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tsetTimeout(() => {\n\t\t\t\tlet products = localStorage.getItem(\"products\");\n\t\t\t\tif (typeof products !== \"string\") {\n\t\t\t\t\tproducts = \"{}\";\n\t\t\t\t}\n\t\t\t\tproducts = JSON.parse(products);\n\t\t\t\tproducts = JSON.parse(db);\n\t\t\t\tif (name in products) {\n\t\t\t\t\tproducts[name] = {...products[name], ...info};\n\t\t\t\t\t// localStorage.setItem(\"products\", JSON.stringify(products));\n\t\t\t\t\tresolve(\"\");\n\t\t\t\t} else {\n\t\t\t\t\treject(\"Produto não encontrado!\");\n\t\t\t\t}\n\t\t\t}, 300);\n\t\t});\n\t}\n\n\tasync getProducts(categoryFilter) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tsetTimeout(() => {\n\t\t\t\tlet products = localStorage.getItem(\"products\");\n\t\t\t\tif (typeof products !== \"string\") {\n\t\t\t\t\tproducts = \"{}\";\n\t\t\t\t}\n\t\t\t\tproducts = JSON.parse(products);\n\t\t\t\tconsole.log(db)\n\t\t\t\tproducts = JSON.parse(db);\n\t\t\t\tif (categoryFilter) {\n\t\t\t\t\tfor (let key of Object.keys(products)) {\n\t\t\t\t\t\tif (products[key].category !== categoryFilter) {\n\t\t\t\t\t\t\tdelete products[key];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tresolve(JSON.stringify(products));\n\t\t\t}, 300);\n\t\t});\n\t};\n\n\tasync removeProduct(name) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tsetTimeout(() => {\n\t\t\t\tlet products = localStorage.getItem(\"products\");\n\t\t\t\tif (typeof products !== \"string\") {\n\t\t\t\t\tproducts = \"{}\";\n\t\t\t\t}\n\t\t\t\tproducts = JSON.parse(products);\n\t\t\t\t// if (name in products) {\n\t\t\t\t// \tdelete products[name];\n\t\t\t\t// \tlocalStorage.setItem(\"products\", JSON.stringify(products));\n\t\t\t\t// \tresolve(\"\");\n\t\t\t\t// } else {\n\t\t\t\t// \treject(\"O produto não existe!\");\n\t\t\t\t// }\n\t\t\t\tif (name in db) {\n\t\t\t\t\tdelete db[name];\n\t\t\t\t\tresolve(\"\");\n\t\t\t\t} else {\n\t\t\t\t\treject(\"O produto não existe!\");\n\t\t\t\t}\n\t\t\t}, 300);\n\t\t});\n\t};\n\n\tasync addProduct(product) {\n\t\tconsole.log(product);\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tsetTimeout(() => {\n\t\t\t\tlet products = localStorage.getItem(\"products\");\n\t\t\t\tif (typeof products !== \"string\") {\n\t\t\t\t\tproducts = \"{}\";\n\t\t\t\t}\n\t\t\t\tconsole.log(\"here\", products);\n\t\t\t\tproducts = JSON.parse(products);\n\t\t\t\tconsole.log(\"now here\", products)\n\t\t\t\t// if (product.name in products) {\n\t\t\t\t// \treject(\"O produto já existe!\");\n\t\t\t\t// } else {\n\t\t\t\t// \tproducts[product.name] = product;\n\t\t\t\t// \tlocalStorage.setItem(\"products\", JSON.stringify(products));\n\t\t\t\t// \tresolve(\"\");\n\t\t\t\t// }\n\t\t\t\tif (product.name in db) {\n\t\t\t\t\treject(\"O produto já existe!\");\n\t\t\t\t} else {\n\t\t\t\t\tdb[product.name] = product;\n\t\t\t\t\tresolve(\"\");\n\t\t\t\t}\n\t\t\t}, 300);\n\t\t});\n\t};\n\n\tasync processPayment(cart) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tsetTimeout(() => {\n\t\t\t\tlet products = localStorage.getItem(\"products\");\n\t\t\t\tif (typeof products !== \"string\") {\n\t\t\t\t\tproducts = \"{}\";\n\t\t\t\t}\n\t\t\t\tproducts = JSON.parse(products);\n\t\t\t\tfor (let item of Object.values(cart)) {\n\t\t\t\t\tif (item.qtt > products[item.glassesPreviewProps.name].availableQtt) {\n\t\t\t\t\t\treject(`Quantidade solicitada para o item ${item.glassesPreviewProps.name} é maior do que a disponível`);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tproducts[item.glassesPreviewProps.name].availableQtt -= item.qtt;\n\t\t\t\t\t\tproducts[item.glassesPreviewProps.name].soldQtt += item.qtt;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlocalStorage.setItem(\"products\", JSON.stringify(products));\n\t\t\t\tresolve(\"\");\n\t\t\t}, 300);\n\t\t});\n\t}\n}\nconst mockAPI = new MockAPI();\n\nmodule.exports = db;\nexport default mockAPI;"],"mappings":"AAAA,IAAIA,EAAE,GAAG,EAAT;;AAEA,MAAMC,OAAN,CAAc;EACbC,WAAW,GAAG,CAAE;;EAEE,MAAZC,YAAY,CAACC,IAAD,EAAO;IACxB,OAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;MACvCC,UAAU,CAAC,MAAM;QAChB,IAAIC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;;QACA,IAAI,OAAOF,KAAP,KAAiB,QAArB,EAA+B;UAC9BA,KAAK,GAAG,IAAR;QACA;;QACDA,KAAK,GAAGG,IAAI,CAACC,KAAL,CAAWJ,KAAX,CAAR;;QACA,IAAIL,IAAI,CAACU,GAAL,IAAYL,KAAhB,EAAuB;UACtBF,MAAM,CAAC,gBAAD,CAAN;QACA,CAFD,MAEO;UACNE,KAAK,CAACL,IAAI,CAACU,GAAN,CAAL,GAAkBV,IAAlB;UACAM,YAAY,CAACK,OAAb,CAAqB,OAArB,EAA8BH,IAAI,CAACI,SAAL,CAAeP,KAAf,CAA9B;UACAH,OAAO,CAAC,EAAD,CAAP;QACA;MACD,CAbS,EAaP,GAbO,CAAV;IAcA,CAfM,CAAP;EAgBA;;EAEa,MAARW,QAAQ,CAACH,GAAD,EAAMI,MAAN,EAAc;IAC3B,OAAO,IAAIb,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;MACvCC,UAAU,CAAC,MAAM;QAChB,IAAIC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;;QACA,IAAI,OAAOF,KAAP,KAAiB,QAArB,EAA+B;UAC9BA,KAAK,GAAG,IAAR;QACA;;QACDA,KAAK,GAAGG,IAAI,CAACC,KAAL,CAAWJ,KAAX,CAAR;;QACA,IAAIK,GAAG,IAAIL,KAAP,IAAgBS,MAAM,KAAKT,KAAK,CAACK,GAAD,CAAL,CAAWK,QAA1C,EAAoD;UACnDb,OAAO,CAAC,EAAD,CAAP;QACA,CAFD,MAEO;UACNC,MAAM,CAAC,EAAD,CAAN;QACA;MACD,CAXS,EAWP,GAXO,CAAV;IAYA,CAbM,CAAP;EAcA;;EAEgB,MAAXa,WAAW,CAACN,GAAD,EAAM;IACtB,OAAO,IAAIT,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;MACvCC,UAAU,CAAC,MAAM;QAChB,IAAIC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;;QACA,IAAI,OAAOF,KAAP,KAAiB,QAArB,EAA+B;UAC9BA,KAAK,GAAG,IAAR;QACA;;QACDA,KAAK,GAAGG,IAAI,CAACC,KAAL,CAAWJ,KAAX,CAAR;;QACA,IAAIK,GAAG,IAAIL,KAAX,EAAkB;UACjBH,OAAO,CAACM,IAAI,CAACI,SAAL,CAAeP,KAAK,CAACK,GAAD,CAApB,CAAD,CAAP;QACA,CAFD,MAEO;UACNP,MAAM,CAAC,yBAAD,CAAN;QACA;MACD,CAXS,EAWP,GAXO,CAAV;IAYA,CAbM,CAAP;EAcA;;EAEa,MAARc,QAAQ,GAAG;IAChB,OAAO,IAAIhB,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;MACvCC,UAAU,CAAC,MAAM;QAChB,IAAIC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;;QACA,IAAI,OAAOF,KAAP,KAAiB,QAArB,EAA+B;UAC9BA,KAAK,GAAG,IAAR;QACA;;QACDH,OAAO,CAACG,KAAD,CAAP;MACA,CANS,EAMP,GANO,CAAV;IAOA,CARM,CAAP;EASA;;EAEmB,MAAda,cAAc,CAACR,GAAD,EAAMS,IAAN,EAAY;IAC/B,OAAO,IAAIlB,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;MACvCC,UAAU,CAAC,MAAM;QAChB,IAAIC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;;QACA,IAAI,OAAOF,KAAP,KAAiB,QAArB,EAA+B;UAC9BA,KAAK,GAAG,IAAR;QACA;;QACDA,KAAK,GAAGG,IAAI,CAACC,KAAL,CAAWJ,KAAX,CAAR;;QACA,IAAIK,GAAG,IAAIL,KAAX,EAAkB;UACjBA,KAAK,CAACK,GAAD,CAAL,GAAa,EAAC,GAAGL,KAAK,CAACK,GAAD,CAAT;YAAgB,GAAGS;UAAnB,CAAb;UACAb,YAAY,CAACK,OAAb,CAAqB,OAArB,EAA8BH,IAAI,CAACI,SAAL,CAAeP,KAAf,CAA9B;UACAH,OAAO,CAAC,EAAD,CAAP;QACA,CAJD,MAIO;UACNC,MAAM,CAAC,yBAAD,CAAN;QACA;MACD,CAbS,EAaP,GAbO,CAAV;IAcA,CAfM,CAAP;EAgBA;;EAEe,MAAViB,UAAU,CAACC,IAAD,EAAO;IACtB,OAAO,IAAIpB,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;MACvCC,UAAU,CAAC,MAAM;QAChB,IAAIkB,QAAQ,GAAGhB,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAf;;QACA,IAAI,OAAOe,QAAP,KAAoB,QAAxB,EAAkC;UACjCA,QAAQ,GAAG,IAAX;QACA;;QACDA,QAAQ,GAAGd,IAAI,CAACC,KAAL,CAAWa,QAAX,CAAX,CALgB,CAMhB;QACA;QACA;QACA;QACA;;QACA,IAAID,IAAI,IAAIzB,EAAZ,EAAgB;UACfM,OAAO,CAACM,IAAI,CAACI,SAAL,CAAehB,EAAE,CAACyB,IAAD,CAAjB,CAAD,CAAP;QACA,CAFD,MAEO;UACNlB,MAAM,CAAC,yBAAD,CAAN;QACA;MACD,CAhBS,EAgBP,GAhBO,CAAV;IAiBA,CAlBM,CAAP;EAmBA;;EAEkB,MAAboB,aAAa,CAACF,IAAD,EAAOF,IAAP,EAAa;IAC/B,OAAO,IAAIlB,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;MACvCC,UAAU,CAAC,MAAM;QAChB,IAAIkB,QAAQ,GAAGhB,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAf;;QACA,IAAI,OAAOe,QAAP,KAAoB,QAAxB,EAAkC;UACjCA,QAAQ,GAAG,IAAX;QACA;;QACDA,QAAQ,GAAGd,IAAI,CAACC,KAAL,CAAWa,QAAX,CAAX;QACAA,QAAQ,GAAGd,IAAI,CAACC,KAAL,CAAWb,EAAX,CAAX;;QACA,IAAIyB,IAAI,IAAIC,QAAZ,EAAsB;UACrBA,QAAQ,CAACD,IAAD,CAAR,GAAiB,EAAC,GAAGC,QAAQ,CAACD,IAAD,CAAZ;YAAoB,GAAGF;UAAvB,CAAjB,CADqB,CAErB;;UACAjB,OAAO,CAAC,EAAD,CAAP;QACA,CAJD,MAIO;UACNC,MAAM,CAAC,yBAAD,CAAN;QACA;MACD,CAdS,EAcP,GAdO,CAAV;IAeA,CAhBM,CAAP;EAiBA;;EAEgB,MAAXqB,WAAW,CAACC,cAAD,EAAiB;IACjC,OAAO,IAAIxB,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;MACvCC,UAAU,CAAC,MAAM;QAChB,IAAIkB,QAAQ,GAAGhB,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAf;;QACA,IAAI,OAAOe,QAAP,KAAoB,QAAxB,EAAkC;UACjCA,QAAQ,GAAG,IAAX;QACA;;QACDA,QAAQ,GAAGd,IAAI,CAACC,KAAL,CAAWa,QAAX,CAAX;QACAI,OAAO,CAACC,GAAR,CAAY/B,EAAZ;QACA0B,QAAQ,GAAGd,IAAI,CAACC,KAAL,CAAWb,EAAX,CAAX;;QACA,IAAI6B,cAAJ,EAAoB;UACnB,KAAK,IAAIG,GAAT,IAAgBC,MAAM,CAACC,IAAP,CAAYR,QAAZ,CAAhB,EAAuC;YACtC,IAAIA,QAAQ,CAACM,GAAD,CAAR,CAAcG,QAAd,KAA2BN,cAA/B,EAA+C;cAC9C,OAAOH,QAAQ,CAACM,GAAD,CAAf;YACA;UACD;QACD;;QACD1B,OAAO,CAACM,IAAI,CAACI,SAAL,CAAeU,QAAf,CAAD,CAAP;MACA,CAhBS,EAgBP,GAhBO,CAAV;IAiBA,CAlBM,CAAP;EAmBA;;EAEkB,MAAbU,aAAa,CAACX,IAAD,EAAO;IACzB,OAAO,IAAIpB,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;MACvCC,UAAU,CAAC,MAAM;QAChB,IAAIkB,QAAQ,GAAGhB,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAf;;QACA,IAAI,OAAOe,QAAP,KAAoB,QAAxB,EAAkC;UACjCA,QAAQ,GAAG,IAAX;QACA;;QACDA,QAAQ,GAAGd,IAAI,CAACC,KAAL,CAAWa,QAAX,CAAX,CALgB,CAMhB;QACA;QACA;QACA;QACA;QACA;QACA;;QACA,IAAID,IAAI,IAAIzB,EAAZ,EAAgB;UACf,OAAOA,EAAE,CAACyB,IAAD,CAAT;UACAnB,OAAO,CAAC,EAAD,CAAP;QACA,CAHD,MAGO;UACNC,MAAM,CAAC,uBAAD,CAAN;QACA;MACD,CAnBS,EAmBP,GAnBO,CAAV;IAoBA,CArBM,CAAP;EAsBA;;EAEe,MAAV8B,UAAU,CAACC,OAAD,EAAU;IACzBR,OAAO,CAACC,GAAR,CAAYO,OAAZ;IACA,OAAO,IAAIjC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;MACvCC,UAAU,CAAC,MAAM;QAChB,IAAIkB,QAAQ,GAAGhB,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAf;;QACA,IAAI,OAAOe,QAAP,KAAoB,QAAxB,EAAkC;UACjCA,QAAQ,GAAG,IAAX;QACA;;QACDI,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBL,QAApB;QACAA,QAAQ,GAAGd,IAAI,CAACC,KAAL,CAAWa,QAAX,CAAX;QACAI,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBL,QAAxB,EAPgB,CAQhB;QACA;QACA;QACA;QACA;QACA;QACA;;QACA,IAAIY,OAAO,CAACb,IAAR,IAAgBzB,EAApB,EAAwB;UACvBO,MAAM,CAAC,sBAAD,CAAN;QACA,CAFD,MAEO;UACNP,EAAE,CAACsC,OAAO,CAACb,IAAT,CAAF,GAAmBa,OAAnB;UACAhC,OAAO,CAAC,EAAD,CAAP;QACA;MACD,CArBS,EAqBP,GArBO,CAAV;IAsBA,CAvBM,CAAP;EAwBA;;EAEmB,MAAdiC,cAAc,CAACC,IAAD,EAAO;IAC1B,OAAO,IAAInC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;MACvCC,UAAU,CAAC,MAAM;QAChB,IAAIkB,QAAQ,GAAGhB,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAf;;QACA,IAAI,OAAOe,QAAP,KAAoB,QAAxB,EAAkC;UACjCA,QAAQ,GAAG,IAAX;QACA;;QACDA,QAAQ,GAAGd,IAAI,CAACC,KAAL,CAAWa,QAAX,CAAX;;QACA,KAAK,IAAIe,IAAT,IAAiBR,MAAM,CAACS,MAAP,CAAcF,IAAd,CAAjB,EAAsC;UACrC,IAAIC,IAAI,CAACE,GAAL,GAAWjB,QAAQ,CAACe,IAAI,CAACG,mBAAL,CAAyBnB,IAA1B,CAAR,CAAwCoB,YAAvD,EAAqE;YACpEtC,MAAM,CAAE,qCAAoCkC,IAAI,CAACG,mBAAL,CAAyBnB,IAAK,8BAApE,CAAN;UACA,CAFD,MAEO;YACNC,QAAQ,CAACe,IAAI,CAACG,mBAAL,CAAyBnB,IAA1B,CAAR,CAAwCoB,YAAxC,IAAwDJ,IAAI,CAACE,GAA7D;YACAjB,QAAQ,CAACe,IAAI,CAACG,mBAAL,CAAyBnB,IAA1B,CAAR,CAAwCqB,OAAxC,IAAmDL,IAAI,CAACE,GAAxD;UACA;QACD;;QACDjC,YAAY,CAACK,OAAb,CAAqB,UAArB,EAAiCH,IAAI,CAACI,SAAL,CAAeU,QAAf,CAAjC;QACApB,OAAO,CAAC,EAAD,CAAP;MACA,CAhBS,EAgBP,GAhBO,CAAV;IAiBA,CAlBM,CAAP;EAmBA;;AAhOY;;AAkOd,MAAMyC,OAAO,GAAG,IAAI9C,OAAJ,EAAhB;AAEA+C,MAAM,CAACC,OAAP,GAAiBjD,EAAjB;AACA,eAAe+C,OAAf"},"metadata":{},"sourceType":"module"}