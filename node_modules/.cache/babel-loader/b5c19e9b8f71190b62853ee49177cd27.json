{"ast":null,"code":"class MockAPI {\n  constructor() {}\n\n  async authAdmin(user, pass) {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        const isAdmin = user === \"admin\" && pass === \"admin\";\n\n        if (isAdmin) {\n          resolve(\"\");\n        } else {\n          reject(\"Usuário e/ou senha inválida(s)\");\n        }\n      }, 300);\n    });\n  }\n\n  async registerUser(user) {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        let users = localStorage.getItem(\"users\");\n\n        if (typeof users !== \"string\") {\n          users = \"{}\";\n        }\n\n        users = JSON.parse(users);\n\n        if (user.cpf in users) {\n          reject(\"CPF já em uso!\");\n        } else {\n          users[user.cpf] = user;\n          localStorage.setItem(\"users\", JSON.stringify(users));\n          resolve(\"\");\n        }\n      }, 300);\n    });\n  }\n\n  async authUser(cpf, passwd) {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        let users = localStorage.getItem(\"users\");\n\n        if (typeof users !== \"string\") {\n          users = \"{}\";\n        }\n\n        users = JSON.parse(users);\n\n        if (cpf in users && passwd === users[cpf].password) {\n          resolve(\"\");\n        } else {\n          reject(\"\");\n        }\n      }, 300);\n    });\n  }\n\n  async getUserInfo(cpf) {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        let users = localStorage.getItem(\"users\");\n\n        if (typeof users !== \"string\") {\n          users = \"{}\";\n        }\n\n        users = JSON.parse(users);\n\n        if (cpf in users) {\n          resolve(JSON.stringify(users[cpf]));\n        } else {\n          reject(\"Usuário não encontrado!\");\n        }\n      }, 300);\n    });\n  }\n\n  async updateUserInfo(cpf, info) {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        let users = localStorage.getItem(\"users\");\n\n        if (typeof users !== \"string\") {\n          users = \"{}\";\n        }\n\n        users = JSON.parse(users);\n\n        if (cpf in users) {\n          users[cpf] = { ...users[cpf],\n            ...info\n          };\n          localStorage.setItem(\"users\", JSON.stringify(users));\n          resolve(\"\");\n        } else {\n          reject(\"Usuário não encontrado!\");\n        }\n      }, 300);\n    });\n  }\n\n  async getProduct(name) {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        let products = localStorage.getItem(\"products\");\n\n        if (typeof products !== \"string\") {\n          products = \"{}\";\n        }\n\n        products = JSON.parse(products);\n\n        if (name in products) {\n          resolve(JSON.stringify(products[name]));\n        } else {\n          reject(\"Produto não encontrado!\");\n        }\n      }, 300);\n    });\n  }\n\n  async updateProduct(name, info) {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        let products = localStorage.getItem(\"products\");\n\n        if (typeof products !== \"string\") {\n          products = \"{}\";\n        }\n\n        products = JSON.parse(products);\n\n        if (name in products) {\n          products[name] = { ...products[name],\n            ...info\n          };\n          localStorage.setItem(\"products\", JSON.stringify(products));\n          resolve(\"\");\n        } else {\n          reject(\"Produto não encontrado!\");\n        }\n      }, 300);\n    });\n  }\n\n  async getProducts(categoryFilter) {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        let products = localStorage.getItem(\"products\");\n\n        if (typeof products !== \"string\") {\n          products = \"{}\";\n        }\n\n        products = JSON.parse(products);\n        console.log('Category filtere: ', categoryFilter);\n        console.log('Before filter:', products);\n\n        if (categoryFilter) {\n          console.log(\"Entrou nesse merda aqui FDP. Deixa de ser burro. Tem que nascer denovo.\");\n\n          for (let key of Object.keys(products)) {\n            if (products[key].category !== categoryFilter) {\n              delete products[key];\n            }\n          }\n        }\n\n        console.log(products);\n        resolve(JSON.stringify(products));\n      }, 300);\n    });\n  }\n\n  async removeProduct(name) {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        let products = localStorage.getItem(\"products\");\n\n        if (typeof products !== \"string\") {\n          products = \"{}\";\n        }\n\n        products = JSON.parse(products);\n\n        if (name in products) {\n          delete products[name];\n          localStorage.setItem(\"products\", JSON.stringify(products));\n          resolve(\"\");\n        } else {\n          reject(\"O produto não existe!\");\n        }\n      }, 300);\n    });\n  }\n\n  async addProduct(product) {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        let products = localStorage.getItem(\"products\");\n\n        if (typeof products !== \"string\") {\n          products = \"{}\";\n        }\n\n        products = JSON.parse(products);\n\n        if (product.name in products) {\n          reject(\"O produto já existe!\");\n        } else {\n          products[product.name] = product;\n          localStorage.setItem(\"products\", JSON.stringify(products));\n          resolve(\"\");\n        }\n      }, 300);\n    });\n  }\n\n  async processPayment(cart) {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        let products = localStorage.getItem(\"products\");\n\n        if (typeof products !== \"string\") {\n          products = \"{}\";\n        }\n\n        products = JSON.parse(products);\n        console.log(products);\n\n        for (let item of Object.values(cart)) {\n          console.log(item.glassesPreviewProps.name);\n          console.log(item, products[item.glassesPreviewProps.name]);\n\n          if (item.qtt > products[item.glassesPreviewProps.name].availableQtt) {\n            reject(`Quantidade solicitada para o item ${item.glassesPreviewProps.name} é maior do que a disponível`);\n          } else {\n            products[item.glassesPreviewProps.name].availableQtt -= item.qtt;\n            products[item.glassesPreviewProps.name].soldQtt += item.qtt;\n          }\n        }\n\n        localStorage.setItem(\"products\", JSON.stringify(products));\n        resolve(\"\");\n      }, 300);\n    });\n  }\n\n}\n\nconst mockAPI = new MockAPI();\nexport default mockAPI;","map":{"version":3,"names":["MockAPI","constructor","authAdmin","user","pass","Promise","resolve","reject","setTimeout","isAdmin","registerUser","users","localStorage","getItem","JSON","parse","cpf","setItem","stringify","authUser","passwd","password","getUserInfo","updateUserInfo","info","getProduct","name","products","updateProduct","getProducts","categoryFilter","console","log","key","Object","keys","category","removeProduct","addProduct","product","processPayment","cart","item","values","glassesPreviewProps","qtt","availableQtt","soldQtt","mockAPI"],"sources":["/home/pedromonici/USP/Quinto_Semestre/WEB/Projeto/Good-Glasses/good-glasses-2/src/API_middlewares/mock.js"],"sourcesContent":["class MockAPI {\n\tconstructor() {};\n\n\tasync authAdmin(user, pass) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tsetTimeout(() => {\n\t\t\t\tconst isAdmin = user === \"admin\" && pass === \"admin\";\n\t\t\t\tif (isAdmin) {\n\t\t\t\t\tresolve(\"\");\n\t\t\t\t} else {\n\t\t\t\t\treject(\"Usuário e/ou senha inválida(s)\");\n\t\t\t\t}\n\t\t\t}, 300);\n\t\t});\n\t}\n\n\tasync registerUser(user) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tsetTimeout(() => {\n\t\t\t\tlet users = localStorage.getItem(\"users\");\n\t\t\t\tif (typeof users !== \"string\") {\n\t\t\t\t\tusers = \"{}\";\n\t\t\t\t}\n\t\t\t\tusers = JSON.parse(users);\n\t\t\t\tif (user.cpf in users) {\n\t\t\t\t\treject(\"CPF já em uso!\");\n\t\t\t\t} else {\n\t\t\t\t\tusers[user.cpf] = user;\n\t\t\t\t\tlocalStorage.setItem(\"users\", JSON.stringify(users));\n\t\t\t\t\tresolve(\"\");\n\t\t\t\t}\n\t\t\t}, 300);\n\t\t});\n\t};\n\n\tasync authUser(cpf, passwd) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tsetTimeout(() => {\n\t\t\t\tlet users = localStorage.getItem(\"users\");\n\t\t\t\tif (typeof users !== \"string\") {\n\t\t\t\t\tusers = \"{}\";\n\t\t\t\t}\n\t\t\t\tusers = JSON.parse(users);\n\t\t\t\tif (cpf in users && passwd === users[cpf].password) {\n\t\t\t\t\tresolve(\"\");\n\t\t\t\t} else {\n\t\t\t\t\treject(\"\");\n\t\t\t\t}\n\t\t\t}, 300);\n\t\t});\n\t};\n\n\tasync getUserInfo(cpf) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tsetTimeout(() => {\n\t\t\t\tlet users = localStorage.getItem(\"users\");\n\t\t\t\tif (typeof users !== \"string\") {\n\t\t\t\t\tusers = \"{}\";\n\t\t\t\t}\n\t\t\t\tusers = JSON.parse(users);\n\t\t\t\tif (cpf in users) {\n\t\t\t\t\tresolve(JSON.stringify(users[cpf]));\n\t\t\t\t} else {\n\t\t\t\t\treject(\"Usuário não encontrado!\");\n\t\t\t\t}\n\t\t\t}, 300);\n\t\t});\n\t};\n\n\tasync updateUserInfo(cpf, info) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tsetTimeout(() => {\n\t\t\t\tlet users = localStorage.getItem(\"users\");\n\t\t\t\tif (typeof users !== \"string\") {\n\t\t\t\t\tusers = \"{}\";\n\t\t\t\t}\n\t\t\t\tusers = JSON.parse(users);\n\t\t\t\tif (cpf in users) {\n\t\t\t\t\tusers[cpf] = {...users[cpf], ...info};\n\t\t\t\t\tlocalStorage.setItem(\"users\", JSON.stringify(users));\n\t\t\t\t\tresolve(\"\");\n\t\t\t\t} else {\n\t\t\t\t\treject(\"Usuário não encontrado!\");\n\t\t\t\t}\n\t\t\t}, 300);\n\t\t});\n\t};\n\n\tasync getProduct(name) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tsetTimeout(() => {\n\t\t\t\tlet products = localStorage.getItem(\"products\");\n\t\t\t\tif (typeof products !== \"string\") {\n\t\t\t\t\tproducts = \"{}\";\n\t\t\t\t}\n\t\t\t\tproducts = JSON.parse(products);\n\t\t\t\tif (name in products) {\n\t\t\t\t\tresolve(JSON.stringify(products[name]));\n\t\t\t\t} else {\n\t\t\t\t\treject(\"Produto não encontrado!\");\n\t\t\t\t}\n\t\t\t}, 300);\n\t\t});\n\t};\n\n\tasync updateProduct(name, info) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tsetTimeout(() => {\n\t\t\t\tlet products = localStorage.getItem(\"products\");\n\t\t\t\tif (typeof products !== \"string\") {\n\t\t\t\t\tproducts = \"{}\";\n\t\t\t\t}\n\t\t\t\tproducts = JSON.parse(products);\n\t\t\t\tif (name in products) {\n\t\t\t\t\tproducts[name] = {...products[name], ...info};\n\t\t\t\t\tlocalStorage.setItem(\"products\", JSON.stringify(products));\n\t\t\t\t\tresolve(\"\");\n\t\t\t\t} else {\n\t\t\t\t\treject(\"Produto não encontrado!\");\n\t\t\t\t}\n\t\t\t}, 300);\n\t\t});\n\t}\n\n\tasync getProducts(categoryFilter) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tsetTimeout(() => {\n\t\t\t\tlet products = localStorage.getItem(\"products\");\n\t\t\t\tif (typeof products !== \"string\") {\n\t\t\t\t\tproducts = \"{}\";\n\t\t\t\t}\n\t\t\t\tproducts = JSON.parse(products);\n\t\t\t\tconsole.log('Category filtere: ', categoryFilter);\n\t\t\t\tconsole.log('Before filter:', products);\t\t\t\t\n\t\t\t\tif (categoryFilter) {\n\t\t\t\t\tconsole.log(\"Entrou nesse merda aqui FDP. Deixa de ser burro. Tem que nascer denovo.\")\n\t\t\t\t\tfor (let key of Object.keys(products)) {\n\t\t\t\t\t\tif (products[key].category !== categoryFilter) {\n\t\t\t\t\t\t\tdelete products[key];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconsole.log(products);\n\t\t\t\tresolve(JSON.stringify(products));\n\t\t\t}, 300);\n\t\t});\n\t};\n\n\tasync removeProduct(name) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tsetTimeout(() => {\n\t\t\t\tlet products = localStorage.getItem(\"products\");\n\t\t\t\tif (typeof products !== \"string\") {\n\t\t\t\t\tproducts = \"{}\";\n\t\t\t\t}\n\t\t\t\tproducts = JSON.parse(products);\n\t\t\t\tif (name in products) {\n\t\t\t\t\tdelete products[name];\n\t\t\t\t\tlocalStorage.setItem(\"products\", JSON.stringify(products));\n\t\t\t\t\tresolve(\"\");\n\t\t\t\t} else {\n\t\t\t\t\treject(\"O produto não existe!\");\n\t\t\t\t}\n\t\t\t}, 300);\n\t\t});\n\t};\n\n\tasync addProduct(product) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tsetTimeout(() => {\n\t\t\t\tlet products = localStorage.getItem(\"products\");\n\t\t\t\tif (typeof products !== \"string\") {\n\t\t\t\t\tproducts = \"{}\";\n\t\t\t\t}\n\t\t\t\tproducts = JSON.parse(products);\n\t\t\t\tif (product.name in products) {\n\t\t\t\t\treject(\"O produto já existe!\");\n\t\t\t\t} else {\n\t\t\t\t\tproducts[product.name] = product;\n\t\t\t\t\tlocalStorage.setItem(\"products\", JSON.stringify(products));\n\t\t\t\t\tresolve(\"\");\n\t\t\t\t}\n\t\t\t}, 300);\n\t\t});\n\t};\n\n\tasync processPayment(cart) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tsetTimeout(() => {\n\t\t\t\tlet products = localStorage.getItem(\"products\");\n\t\t\t\tif (typeof products !== \"string\") {\n\t\t\t\t\tproducts = \"{}\";\n\t\t\t\t}\n\t\t\t\tproducts = JSON.parse(products);\n\t\t\t\tconsole.log(products);\n\t\t\t\tfor (let item of Object.values(cart)) {\n\t\t\t\t\tconsole.log(item.glassesPreviewProps.name);\n\t\t\t\t\tconsole.log(item, products[item.glassesPreviewProps.name]);\n\t\t\t\t\tif (item.qtt > products[item.glassesPreviewProps.name].availableQtt) {\n\t\t\t\t\t\treject(`Quantidade solicitada para o item ${item.glassesPreviewProps.name} é maior do que a disponível`);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tproducts[item.glassesPreviewProps.name].availableQtt -= item.qtt;\n\t\t\t\t\t\tproducts[item.glassesPreviewProps.name].soldQtt += item.qtt;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlocalStorage.setItem(\"products\", JSON.stringify(products));\n\t\t\t\tresolve(\"\");\n\t\t\t}, 300);\n\t\t});\n\t}\n}\nconst mockAPI = new MockAPI();\n\nexport default mockAPI;"],"mappings":"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"},"metadata":{},"sourceType":"module"}